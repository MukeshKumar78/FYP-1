version: '3.8'

services:
  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - proxy

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.whoami.middlewares=users@docker"
    networks:
      - proxy

  users:
    container_name: campusme-users
    security_opt:
      - no-new-privileges:true
    build:
      context: ../users
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_URI: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/users
      JWT_SECRET:
      PROVIDER_CLIENT_ID:
      PROVIDER_CLIENT_SECRET:
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.users.rule=Host(`${DOMAIN}`) && PathPrefix(`/users`)"
      - "traefik.http.services.users.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.users.forwardauth.address=http://${DOMAIN}/users"
      - 'traefik.http.middlewares.users.forwardAuth.trustForwardHeader=true'
    networks:
      - proxy
      - internal
  
  db:
    container_name: campusme-db
    image: postgres:14.5
    healthcheck:
      test: pg_isready -U postgres -h localhost
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_PASSWORD:
    volumes:
      - ./volumes/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal
  
networks:
  proxy:
    external: true
  internal: {}